// Root import file

// ATOMS ------------

//	In chemistry, utility are the basic building blocks of matter. They have distinct properties and can't be broken down further without losing their meaning.
//	Translated to interfaces, utility are basic tags, such as form labels, inputs or buttons. They also include more abstract elements like color palettes, fonts, and animations.
//	Atoms are abstract and aren't often terribly useful on their own, but they provide a useful reference and allow you to see all your global styles laid out at a glance.
//@import "utility/settings";
@import "utility/normalize";
@import (reference) "../_vars";
@import "utility/typography";
@import "utility/headings";
@import "utility/grids";
@import "utility/paragraphs";
@import "utility/lists";
@import "utility/links";
@import "utility/tables";
@import "utility/buttons";
@import "utility/forms";
@import "utility/colors";
@import "utility/images";
@import "utility/symbols";
@import "utility/blockquote";
@import "utility/u-box";
@import "utility/figure";

// MOLECULES ----------
//	In chemistry, blocks are groups of utility bonded together, which take on new properties as a result.
//	In interfaces, blocks are groups of elements that function together as a unit. For example, a form label, search input, and button atom can combine them together to form a search form molecule.
//	Building up from utility to blocks encourages a “do one thing and do it well” mentality, and encourages creating reusable interface patterns.
@import "blocks/masthead";
@import "blocks/fancy-list";
@import "utility/special-paragraphs";
@import "blocks/navigation";
@import "blocks/search-field";
@import "pageteasers/employee";
@import "pageteasers/klugeprat";
@import "pageteasers/work";
@import "blocks/klugeprat";
@import "blocks/b-documents";


// ORGANISMS
//	Organisms are groups of blocks (and possibly utility) joined together to form distinct section of an interface.
//	Organisms can consist of similar and/or disparate molecule types. For example, a masthead organism might consist of a logo, navigation, and search form, while a “product grid” organism might consist of the same product info molecule repeated over and over.
//	Building up from blocks to shared encourages creating standalone, portable, reusable components.
@import "shared/main-header";
@import "shared/main-footer";
@import "blocks/banner";
@import "blocks/frontpage-news";
@import "shared/filter";


// TEMPLATES
//	With pages, we break our biochemistry analogy to get into language that makes more sense to clients and final output. Templates are comprised mostly of shared combined together to form page-level objects.
//	Templates provide context for these relatively abstract blocks and shared, which is helpful for designers and clients alike.
//	Templates mostly focus on content structure (such as character length, image size, etc) rather than the actual content.
@import "pages/employees";
@import "pages/expertice";
@import "pages/article";

